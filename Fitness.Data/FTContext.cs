// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Fitness.Model.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace Fitness.Data;

public partial class FTContext : DbContext
{
    public FTContext(DbContextOptions<FTContext> options)
        : base(options)
    {
    }
    public virtual DbSet<ActividadFisica> ActividadFisica { get; set; }

    public virtual DbSet<Alimento> Alimento { get; set; }

    public virtual DbSet<AlimentoConsumido> AlimentoConsumido { get; set; }

    public virtual DbSet<BitacoraPeso> BitacoraPeso { get; set; }

    public virtual DbSet<Dieta> Dieta { get; set; }

    public virtual DbSet<Genero> Genero { get; set; }

    public virtual DbSet<MetaSalud> MetaSalud { get; set; }

    public virtual DbSet<TipoActividadFisica> TipoActividadFisica { get; set; }

    public virtual DbSet<TipoAltura> TipoAltura { get; set; }

    public virtual DbSet<TipoComida> TipoComida { get; set; }

    public virtual DbSet<TipoDistancia> TipoDistancia { get; set; }

    public virtual DbSet<TipoMedida> TipoMedida { get; set; }

    public virtual DbSet<TipoMeta> TipoMeta { get; set; }

    public virtual DbSet<TipoPeso> TipoPeso { get; set; }

    public virtual DbSet<Usuario> Usuario { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("SQL_Latin1_General_CP1_CI_AS");

        modelBuilder.Entity<ActividadFisica>(entity =>
        {
            entity.Property(e => e.Eliminado).HasDefaultValue(false);

            entity.HasOne(d => d.TipoActividadFisicaNavigation).WithMany(p => p.ActividadFisica)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ActividadFisica_TipoActivadadFisica");

            entity.HasOne(d => d.TipoDistanciaNavigation).WithMany(p => p.ActividadFisica).HasConstraintName("FK_ActividadFisica_TipoDistancia");

            entity.HasOne(d => d.UsuarioNavigation).WithMany(p => p.ActividadFisica)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ActividadFisica_Usuario");
        });

        modelBuilder.Entity<Alimento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Alimentos");

            entity.Property(e => e.Eliminado).HasDefaultValue(false);
        });

        modelBuilder.Entity<AlimentoConsumido>(entity =>
        {
            entity.HasOne(d => d.AlimentoNavigation).WithMany(p => p.AlimentoConsumido)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_AlimentoConsumido_Alimento");

            entity.HasOne(d => d.DietaNavigation).WithMany(p => p.AlimentoConsumido)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_AlimentoConsumido_Dieta");
        });

        modelBuilder.Entity<BitacoraPeso>(entity =>
        {
            entity.HasOne(d => d.TipoPesoNavigation).WithMany(p => p.BitacoraPeso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BitacoraPeso_TipoPeso");

            entity.HasOne(d => d.UsuarioNavigation).WithMany(p => p.BitacoraPeso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BitacoraPeso_Usuario");
        });

        modelBuilder.Entity<Dieta>(entity =>
        {
            entity.Property(e => e.Eliminado).HasDefaultValue(false);

            entity.HasOne(d => d.TipoComidaNavigation).WithMany(p => p.Dieta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Dieta_TipoComida");

            entity.HasOne(d => d.UsuarioNavigation).WithMany(p => p.Dieta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Dieta_Usuario");
        });

        modelBuilder.Entity<Genero>(entity =>
        {
            entity.Property(e => e.Eliminado).HasDefaultValue(false);
        });

        modelBuilder.Entity<MetaSalud>(entity =>
        {
            entity.Property(e => e.Eliminado).HasDefaultValue(false);

            entity.HasOne(d => d.TipoMetaNavigation).WithMany(p => p.MetaSalud)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MetaSalud_TipoMeta");

            entity.HasOne(d => d.TipoPesoNavigation).WithMany(p => p.MetaSalud)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MetaSalud_TipoPeso");

            entity.HasOne(d => d.UsuarioNavigation).WithMany(p => p.MetaSalud)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MetaSalud_Usuario");
        });

        modelBuilder.Entity<TipoActividadFisica>(entity =>
        {
            entity.Property(e => e.Eliminado).HasDefaultValue(false);
        });

        modelBuilder.Entity<TipoAltura>(entity =>
        {
            entity.Property(e => e.Eliminado).HasDefaultValue(false);
        });

        modelBuilder.Entity<TipoComida>(entity =>
        {
            entity.Property(e => e.Eliminado).HasDefaultValue(false);
        });

        modelBuilder.Entity<TipoDistancia>(entity =>
        {
            entity.Property(e => e.Eliminado).HasDefaultValue(false);
        });

        modelBuilder.Entity<TipoMedida>(entity =>
        {
            entity.Property(e => e.Eliminado).HasDefaultValue(false);
        });

        modelBuilder.Entity<TipoMeta>(entity =>
        {
            entity.Property(e => e.Eliminado).HasDefaultValue(false);
        });

        modelBuilder.Entity<TipoPeso>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Peso");

            entity.Property(e => e.Eliminado).HasDefaultValue(false);
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.ToTable(tb => tb.HasTrigger("actualizarPeso"));

            entity.Property(e => e.Eliminado).HasDefaultValue(false);
            entity.Property(e => e.Foto).HasDefaultValueSql("(NULL)");

            entity.HasOne(d => d.GeneroNavigation).WithMany(p => p.Usuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuario_Genero");

            entity.HasOne(d => d.TipoAlturaNavigation).WithMany(p => p.Usuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuario_TipoAltura");

            entity.HasOne(d => d.TipoPesoNavigation).WithMany(p => p.Usuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuario_TipoPeso");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}